<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UI_Query">
	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-06-21 -->
	<!-- Insert User : KCM -->
	<!-- Description : 데시보드 메뉴 데이터 조회 -->
	<!-- Controller : -->
	<select id="select_UI_MENU_MASTER" resultType="java.util.HashMap">
		SELECT
		"menu_master"."master_cd", "menu_master"."master_namekey",
		"menu_master"."master_desc",
		"menu_master"."master_order",
		"menu_master"."master_url", "menu_master"."master_icon",
		"menu_sub"."sub_cd", "menu_sub"."subname_key", "menu_sub"."sub_desc",
		"menu_sub"."sub_order",
		"menu_sub"."sub_Url", "menu_sub"."sub_icon",
		"menu_sub"."controller_mapping"
		FROM "menu_master"
		RIGHT OUTER JOIN
		"menu_sub"
		ON "menu_master"."master_cd" = "menu_sub"."master_cd"
		WHERE
		"menu_sub"."display_yn" = TRUE
		ORDER BY "menu_master"."master_order",
		"menu_sub"."sub_order";
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-07 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : systemUserManagement.jsp 페이지 테이블 행 개수 조회 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_SYSTEM_USER_INFO_CONDITIONAL_SEARCH_TOTAL_COUNT"
		parameterType="hashmap" resultType="Integer">
		SELECT count(*) AS total
		FROM
		SYSTEM_USER_INFO
		WHERE (user_id like CONCAT('%', #{searchValue}, '%') OR
		user_name
		like CONCAT('%', #{searchValue}, '%')) and site_id=#{site_id} 
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-07 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : systemUserManagement.jsp 페이지 테이블 정보 조회 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_SYSTEM_USER_INFO_CONDITIONAL_SEARCH"
		parameterType="hashmap" resultType="Common.DTO.SYSTEM_USER_INFO_DTO">
		SELECT
		site_id,user_seq,group_id,user_id,user_pw,user_name,dept_name,position_name,phone_num,mobile_num,email,mysingle_yn,insert_date,modify_date
		FROM SYSTEM_USER_INFO
		WHERE (user_id like CONCAT('%', #{searchValue},'%') OR user_name like CONCAT('%', #{searchValue}, '%')) and site_id=#{site_id}
		ORDER BY ${orderColumn} ${orderType} offset #{startIndex} limit #{length};
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-11 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 유저 정보 조회 (Only Record One) -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_SYSTEM_USER_INFO_ONE_SEARCH" parameterType="hashmap"
		resultType="Common.DTO.SYSTEM_USER_INFO_DTO">
		SELECT
		site_id,user_seq,group_id,user_id,user_pw,user_name,dept_name,position_name,phone_num,mobile_num,email,mysingle_yn,insert_date,modify_date
		FROM SYSTEM_USER_INFO WHERE user_id=#{user_id};
	</select>

	<!-- Query Type : Update(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-11 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 유저 정보 변경 (Only Record One) -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<update id="update_SYSTEM_USER_INFO_ONE_RECORD" parameterType="hashmap">
		SET TIMEZONE TO '${time_zone}';
		UPDATE system_user_info set
		<if test="user_pw != ''">user_pw=#{user_pw},</if>
		user_name=#{user_name},group_id=#{group_id},site_id=#{site_id},dept_name=#{dept_name},position_name=#{position_name},email=#{email},phone_num=#{phone_num},mobile_num=#{mobile_num},modify_date=now()
		WHERE user_id=#{user_id};
	</update>

	<!-- Query Type : Insert(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-11 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 유저 정보 추가 (Only Record One) -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<insert id="insert_SYSTEM_USER_INFO_ONE_RECORD" parameterType="hashmap">
		SET TIMEZONE TO '${time_zone}';
		INSERT into
		system_user_info (site_id,
		user_id, user_pw,
		user_name, group_id, dept_name, position_name,
		phone_num,
		mobile_num, email, mysingle_yn, insert_date, modify_date)
		VALUES (#{site_id}, #{user_id}, #{user_pw},
		#{user_name}, #{group_id},
		#{dept_name}, #{position_name}, #{phone_num},
		#{mobile_num}, #{email},
		false, now(), now());
	</insert>

	<!-- Query Type : Delete(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-12 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 유저 정보 삭제 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<delete id="delete_SYSTEM_USER_INFO_RECORDS" parameterType="hashmap">
		DELETE FROM system_user_info WHERE user_id in
		(
		<foreach collection="list" item="item" separator=" , ">#{item}
		</foreach>
		);
	</delete>


	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-11 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 시스템 유저 그룹 정보 조회 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_SYSTEM_USER_GROUP_INFO" resultType="Common.DTO.SYSTEM_USER_GROUP_DTO">
		SELECT
		site_id,group_id,group_name,group_desc FROM system_user_group;
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-14 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : systemGroupManagement.jsp 시스템 유저 테이블 정보 조회 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_SYSTEM_USER_GROUP_INFO_CONDITIONAL_SEARCH"
		parameterType="hashmap" resultType="java.util.HashMap">
		SELECT si.site_name, sg.group_name, sg.group_desc,sg.group_id
		FROM system_user_group as sg, site_info as si
		WHERE sg.site_id = si.site_id and <if test='site_master == "f"'> sg.site_id=#{site_id} and </if> (si.site_name like CONCAT('%',
		#{searchValue}, '%') OR sg.group_name like CONCAT('%', #{searchValue},
		'%') OR sg.group_desc like CONCAT('%', #{searchValue}, '%'))
		ORDER BY
		${orderColumn} ${orderType};
	</select>


	<!-- Query Type : Insert(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-13 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 시스템 유저 그룹 정보 추가 (Only Record One) -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<insert id="insert_SYSTEM_USER_GROUP_INFO_ONE_RECORD"
		parameterType="hashmap">
		INSERT into
		system_user_group (site_id,
		group_name, group_desc)
		VALUES (#{site_id}, #{group_name},
		#{group_desc});
	</insert>

	<!-- Query Type : Update(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-13 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 시스템 유저 그룹 정보 변경 (Only Record One) -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<update id="update_SYSTEM_USER_GROUP_INFO_ONE_RECORD"
		parameterType="hashmap">
		UPDATE system_user_group set
		site_id=#{site_id},group_name=#{group_name},group_desc=#{group_desc}
		WHERE group_id=#{group_id};
	</update>

	<!-- Query Type : Delete(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-13 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 시스템 유저 그룹 정보 삭제 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<delete id="delete_SYSTEM_USER_GROUP_INFO_RECORDS"
		parameterType="hashmap">
		DELETE FROM system_user_group WHERE group_id in
		(
		<foreach collection="list" item="item" separator=" , ">#{item}
		</foreach>
		);
	</delete>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-11 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 사업장 정보 조회 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_SITE_INFO" resultType="Common.DTO.SITE_INFO_DTO">
		SELECT site_id,
		site_name, site_code, description, site_master FROM site_info;
	</select>
	
	
	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-22 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 한개의 사업장 정보 조회 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_SITE_INFO_ONE_SEARCH" resultType="Common.DTO.SITE_INFO_DTO" parameterType="Integer">
		SELECT site_id, site_name, site_code, description, site_master FROM site_info where site_id=#{site_id};
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-14 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : systemGroupManagement.jsp 사업장 테이블 정보 조회 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_SITE_INFO_CONDITIONAL_SEARCH" parameterType="hashmap"
		resultType="Common.DTO.SITE_INFO_DTO">
		SELECT
		site_id,site_name,site_code,description
		FROM site_info
		WHERE site_code like CONCAT('%', #{searchValue},
		'%') OR site_name
		like
		CONCAT('%', #{searchValue}, '%') OR description like CONCAT('%',
		#{searchValue}, '%') ORDER BY
		${orderColumn} ${orderType};
	</select>

	<!-- Query Type : Insert(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-13 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 사업장 정보 추가 (Only Record One) -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<insert id="insert_SITE_INFO_ONE_RECORD" parameterType="hashmap">
		INSERT
		into
		site_info ( site_name,
		site_code, description)
		VALUES
		(#{site_name},
		#{site_code},
		#{description});
	</insert>

	<!-- Query Type : Delete(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-13 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 사업장 정보 삭제 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<delete id="delete_SITE_INFO_RECORDS" parameterType="hashmap">
		DELETE FROM site_info WHERE site_id in
		(
		<foreach collection="list" item="item" separator=" , ">#{item}
		</foreach>
		);
	</delete>

	<!-- Query Type : Update(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-13 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 사업장 정보 변경 (Only Record One) -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<update id="update_SITE_INFO_ONE_RECORD" parameterType="hashmap">
		UPDATE
		site_info set
		site_name=#{site_name},site_code=#{site_code},description=#{description}
		WHERE site_id=#{site_id};
	</update>


	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-11 -->
	<!-- Insert User : KCM -->
	<!-- Description : IP관리 > 고정IP현황 - 세그먼트별 데이터 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_IP_MANAGEMENT_SEGMENT" resultType="java.util.HashMap">
		SELECT * FROM "dhcp_network" ,(SELECT count(*) allcount FROM
		"dhcp_network") as allcount
		WHERE site_id = ${siteid}
		AND (network like CONCAT('%', #{searchValue}, '%') OR comment like
		CONCAT('%', #{searchValue}, '%')
		OR start_ip like CONCAT('%', #{searchValue}, '%') OR end_ip like
		CONCAT('%', #{searchValue}, '%'))
		ORDER BY
		<choose>
			<when test="orderColumn == 'comment'"> ${orderColumn} ${orderType} </when>
			<when test="orderColumn != 'comment'"> inet(${orderColumn}) ${orderType} </when>
		</choose>
		OFFSET #{startIndex} LIMIT #{length};
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-12 -->
	<!-- Insert User : KCM -->
	<!-- Description : IP관리 > 고정IP현황 - 세그먼트별 상세 데이터 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_IP_MANAGEMENT_SEGMENT_DETAIL" resultType="java.util.HashMap">
		SET TIMEZONE TO '${time_zone}';
		SELECT * FROM 
            (SELECT "network", "ipaddr", COALESCE("ip_type",'') AS "ip_type", COALESCE("macaddr",'') AS "macaddr", COALESCE("duid",'') AS "duid", "is_conflict", 
                    COALESCE("conflict_types",'') AS "conflict_types", COALESCE("status",'') AS "status", COALESCE("lease_state",'') AS "lease_state",
                    COALESCE("obj_types",'') AS "obj_types", COALESCE("discover_status",'') AS "discover_status", COALESCE("usage",'') AS "usage", 
		            COALESCE("host_name",'') AS "host_name", COALESCE("host_os",'') AS "host_os", COALESCE("fingerprint",'') AS "fingerprint", 
		            COALESCE("is_never_ends", FALSE) AS "is_never_ends", COALESCE("is_never_start", FALSE) AS "is_never_start",
                    COALESCE(to_char("lease_start_time",'YYYY-MM-DD HH24:MI:SS'),'') AS "lease_start_time",
                    COALESCE(to_char("lease_end_time",'YYYY-MM-DD HH24:MI:SS'),'') AS "lease_end_time",
                    COALESCE(to_char("last_discovered",'YYYY-MM-DD HH24:MI:SS'),'') AS "last_discovered",
                    COALESCE("user_description",'') AS "user_description"
               FROM "dhcp_ip_status"
              WHERE "site_id" = #{siteid} AND "network" = #{network} 
                AND ("network" like CONCAT('%', #{searchValue}, '%') OR "ipaddr" like CONCAT('%', #{searchValue}, '%') OR 
                     "ip_type" like CONCAT('%', #{searchValue}, '%') OR "macaddr" like CONCAT('%', #{searchValue}, '%') OR 
                     "duid" like CONCAT('%', #{searchValue}, '%') OR "conflict_types" like CONCAT('%', #{searchValue}, '%') OR
                     "status" like CONCAT('%', #{searchValue}, '%') OR "lease_state" like CONCAT('%', #{searchValue}, '%') OR
                     "obj_types" like CONCAT('%', #{searchValue}, '%') OR "discover_status" like CONCAT('%', #{searchValue}, '%') OR
                     "usage" like CONCAT('%', #{searchValue}, '%') OR "host_name" like CONCAT('%', #{searchValue}, '%') OR
                     "host_os" like CONCAT('%', #{searchValue}, '%') OR "fingerprint" like CONCAT('%', #{searchValue}, '%') OR
                     "user_description" like CONCAT('%', #{searchValue}, '%'))
              UNION
             SELECT "network" AS "network", "ipaddr" AS "ipaddr", '' AS "ip_type", "macaddr" AS "macaddr", '' AS "duid", false AS "is_conflict", '' AS "conflict_types",
                    'FIXED' AS "status", '' AS "lease_state", '' AS "obj_types", '' AS "discover_status", '' AS "usage", '' AS "host_name", '' AS "host_os",
                    '' AS "fingerprint", false AS "is_never_ends", false AS "is_never_start", '' AS "lease_start_time", '' AS "lease_end_time",
                    COALESCE(to_char("update_time",'YYYY-MM-DD HH24:MI:SS'),'') AS "last_discovered",
                    "comment" AS "user_description"
               FROM "dhcp_fixed_ip"
              WHERE "site_id" = #{siteid} AND "network" = #{network}) AS main,
            (SELECT COUNT("ipaddr") AS "allcount"
		       FROM (SELECT "ipaddr" FROM "dhcp_lease_ip" WHERE "site_id" = #{siteid} AND "network" = #{network}
		      UNION
             SELECT "ipaddr" FROM "dhcp_fixed_ip" WHERE "site_id" = #{siteid} AND "network" = #{network}) as TCount) as countTable
		 ORDER BY
		<choose>
			<when test="orderColumn == 'network' or orderColumn == 'ipaddr'"> inet(${orderColumn}) ${orderType} </when>
			<when test="orderColumn != 'network' and orderColumn != 'ipaddr'"> ${orderColumn} ${orderType} </when>
		</choose>
		OFFSET #{startIndex} LIMIT #{length};
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-15 -->
	<!-- Insert User : KCM -->
	<!-- Description : IP관리 > 고정IP현황 - 세그먼트별 ip map 데이터 - DHCP Range -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_IP_MANAGEMENT_SEGMENT_DETAIL_MAP_DHCPRANGE"
		resultType="java.util.HashMap">
		SELECT "netzone".*, "range"."start_ip" AS "dhcp_start_ip", "range"."end_ip" AS "dhcp_end_ip"
		  FROM "dhcp_network" AS "netzone", "dhcp_range" AS "range"
		 WHERE "netzone"."site_id" = "range"."site_id"
		   AND "netzone"."network" = "range"."network"
		   AND "netzone"."site_id" = #{siteid} AND "netzone"."network" = #{network}
		 ORDER BY inet("netzone"."network")
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-15 -->
	<!-- Insert User : KCM -->
	<!-- Description : IP관리 > 고정IP현황 - 세그먼트별 ip map 데이터 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_IP_MANAGEMENT_SEGMENT_DETAIL_MAPDATA"
		resultType="java.util.HashMap">
		SELECT * FROM "dhcp_lease_ip"
		 WHERE "site_id" = #{siteid} AND "network" = #{network}
		 ORDER BY inet("ipaddr")
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-19 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 메뉴권한관리 table 정보 조회 auth_menu_id가 -1이라면 생성이 필요한 값 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_AUTH_MENU_MAKE_SEARCH_FOR_SITE" resultType="java.util.HashMap">
		select COALESCE(am.auth_menu_id,-1) as auth_menu_id,
		COALESCE(am.auth_state,'N') as
		auth_state,ms.master_cd,ms.sub_cd,sug.site_id,sug.group_id from
		auth_menu as am right outer join (menu_sub as ms natural join
		system_user_group as sug) on am.group_id = sug.group_id and am.site_id
		= sug.site_id and am.master_cd = ms.master_cd and am.sub_cd =ms.sub_cd
		where sug.site_id=#{site_id} and ms.master_cd != 'M01' order by
		ms.master_cd,ms.sub_cd,sug.group_id
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-19 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 메뉴권한관리 table group names -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_AUTH_MENU_GROUP_NAMES" resultType="java.util.HashMap">
		select
		group_id,group_name from system_user_group where site_id = #{site_id}
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-19 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 메뉴권한관리 table menu master -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_AUTH_MENU_M_MASTER" resultType="java.util.HashMap">
		select
		master_cd,master_namekey from menu_master  where master_cd != 'M01';
	</select>

	<!-- Query Type : Select(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-19 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 메뉴권한관리 table menu sub -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<select id="select_AUTH_MENU_M_SUB" resultType="java.util.HashMap">
		select
		master_cd,sub_cd,subname_key from menu_sub where master_cd != 'M01';
	</select>
	
	<!-- Query Type : Update(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-21 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 페이지 권한 정보 변경 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<update id="update_AUTH_MENU" parameterType="hashmap">
		UPDATE auth_menu SET
		auth_state=#{auth_state} WHERE auth_menu_id=#{auth_menu_id};
	</update>

	<!-- Query Type : Insert(Select, Insert, Update, Delete) -->
	<!-- Insert Date : 2016-07-21 -->
	<!-- Insert User : 이재원 -->
	<!-- Description : 페이지 권한 정보 추가 -->
	<!-- Controller : MVC.ShinwooTNS.action.ConfigManagementActionController -->
	<insert id="insert_AUTH_MENU" parameterType="hashmap">
		INSERT
		INTO auth_menu ("auth_state", "master_cd", "sub_cd", "site_id",
		"group_id") VALUES
		(#{auth_state},#{master_cd},#{sub_cd},#{site_id},#{group_id});
	</insert>

</mapper>



<!-- <mapper namespace="testSqlMap" > -->
<!-- <select id="selectTestTable" resultType="java.util.HashMap"> -->

<!-- SELECT * FROM "UI_MENU_MASTER" -->

<!-- </select> -->
<!-- </mapper> -->