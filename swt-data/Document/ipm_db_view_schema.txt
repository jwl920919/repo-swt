
--==========================================================================================
-- VIEW
--==========================================================================================

-- DROP VIEW view_ip_status

CREATE OR REPLACE VIEW public.view_ip_status AS 
 SELECT ip.site_id,
    ip.network,
    ip.ip_type,
    ip.ipaddr,
    ip.ip_num,
    ip.macaddr,
    ip.duid,
        CASE
            WHEN range.start_ip IS NOT NULL THEN true
            ELSE false
        END AS is_range,
        CASE
            WHEN ip.obj_types::text ~~ '%NETWORK%'::text THEN 'NETWORK'::text
            WHEN ip.obj_types::text ~~ '%BROADCAST%'::text THEN 'BROADCAST'::text
            WHEN ip.obj_types::text ~~ '%FA%'::text THEN 'FIXED'::text
            WHEN ip.obj_types::text ~~ '%RESERVATION%'::text THEN 'RESERVATION'::text
            WHEN ip.lease_state::text = 'ABANDONED'::text THEN 'ABANDONED'::text
            WHEN ip.is_conflict = true THEN 'CONFLICT'::text
            WHEN ip.lease_state::text = 'ACTIVE'::text THEN 'LEASE'::text
            WHEN ip.lease_state::text = 'FREE'::text OR ip.lease_state::text = 'RELEASED'::text OR ip.lease_state::text = 'EXPIRED'::text THEN NULL::text
            WHEN ip.status::text = 'USED'::text THEN 'USED'::text
            ELSE 'FREE'::text
        END AS ip_status,
    ip.lease_start_time,
    ip.lease_end_time,
    ip.host_name,
    ip.fingerprint,
    ip.update_time
   FROM dhcp_ip_status ip
     LEFT JOIN dhcp_range range ON range.start_num <= ip.ip_num AND ip.ip_num <= range.end_num
  ORDER BY ip.ip_num;


-- DROP VIEW view_lease_ip_status

CREATE OR REPLACE VIEW public.view_lease_ip_status AS 
 SELECT range.site_id,
    range.ip_type,
    COALESCE(sum(status.fixed_ip), 0::numeric) AS fixed_ip,
    COALESCE(sum(status.lease_ip), 0::numeric) AS lease_ip,
    COALESCE(sum(range.ip_count), 0::numeric) - COALESCE(sum(status.used_total), 0::numeric) AS unused_ip,
    COALESCE(sum(range.ip_count), 0::numeric) AS total_count
   FROM ( SELECT dhcp_range.site_id,
            dhcp_range.ip_type,
            sum(dhcp_range.ip_count) AS ip_count
           FROM dhcp_range
          GROUP BY dhcp_range.site_id, dhcp_range.ip_type) range
     LEFT JOIN ( SELECT view_ip_status.site_id,
            view_ip_status.ip_type,
                CASE
                    WHEN view_ip_status.ip_status = 'FIXED'::text THEN sum(1)
                    ELSE NULL::bigint
                END AS fixed_ip,
                CASE
                    WHEN view_ip_status.ip_status = ANY (ARRAY['LEASE'::text, 'NETWORK'::text, 'BROADCAST'::text, 'RESERVATION'::text, 'CONFLICT'::text]) THEN sum(1)
                    ELSE NULL::bigint
                END AS lease_ip,
                CASE
                    WHEN COALESCE(view_ip_status.ip_status, ''::text) <> ''::text THEN sum(1)
                    ELSE NULL::bigint
                END AS used_total
           FROM view_ip_status
          WHERE view_ip_status.is_range = true
          GROUP BY view_ip_status.site_id, view_ip_status.ip_type, view_ip_status.ip_status) status ON range.site_id = status.site_id AND range.ip_type::text = status.ip_type::text
  GROUP BY range.site_id, range.ip_type;


-- DROP VIEW view_network_ip_status;

CREATE OR REPLACE VIEW public.view_network_ip_status AS 
 SELECT status.site_id,
    status.ip_type,
    status.network,
    status.start_ip,
    status.end_ip,
    status.comment,
    status.used_ip,
    status.ip_total,
        CASE
            WHEN status.ip_total > 0::numeric THEN trunc(status.used_ip::numeric / status.ip_total * 100.0, 2)
            ELSE 0.00
        END AS ip_usage,
    status.range_used,
    status.range_total,
        CASE
            WHEN status.range_total > 0::numeric THEN trunc(status.range_used::numeric / status.range_total * 100.0, 2)
            ELSE 0.00
        END AS range_usage
   FROM ( SELECT nw.site_id,
            nw.ip_type,
            nw.start_num,
            nw.network,
            nw.start_ip,
            nw.end_ip,
            nw.comment,
            COALESCE(ip.used_ip, 0::bigint) AS used_ip,
            nw.ip_count AS ip_total,
            COALESCE(ip.rg_used_ip, 0::bigint) AS range_used,
            COALESCE(rg.ip_count, 0::numeric) AS range_total
           FROM dhcp_network nw
             LEFT JOIN ( SELECT view_ip_status.site_id,
                    view_ip_status.network,
                    view_ip_status.ip_type,
                    sum(
                        CASE
                            WHEN COALESCE(view_ip_status.ip_status, ''::text) <> ''::text THEN 1
                            ELSE NULL::integer
                        END) AS used_ip,
                    sum(
                        CASE
                            WHEN view_ip_status.is_range = true AND COALESCE(view_ip_status.ip_status, ''::text) <> ''::text THEN 1
                            ELSE NULL::integer
                        END) AS rg_used_ip
                   FROM view_ip_status
                  GROUP BY view_ip_status.site_id, view_ip_status.network, view_ip_status.ip_type) ip ON nw.site_id = ip.site_id AND nw.network::text = ip.network::text AND nw.ip_type::text = ip.ip_type::text AND nw.network::text = ip.network::text
             LEFT JOIN ( SELECT dhcp_range.site_id,
                    dhcp_range.network,
                    dhcp_range.ip_type,
                    sum(dhcp_range.ip_count) AS ip_count
                   FROM dhcp_range
                  GROUP BY dhcp_range.site_id, dhcp_range.network, dhcp_range.ip_type) rg ON nw.site_id = rg.site_id AND nw.network::text = rg.network::text) status
  ORDER BY status.site_id, status.ip_type, status.start_num;


